#how to write a deployment spec : https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-api-spring-boot-k8s
spec:
  selector:
    matchLabels:
      app: rest-api-spring-boot-k8s
  replicas: 1
  template:
    metadata:
      labels:
        app: rest-api-spring-boot-k8s
      annotations:
        vault.hashicorp.com/agent-inject: "true" #enable Vault Agent injection for this pod.
        vault.hashicorp.com/agent-inject-status: "update" #ensure the status of secret injection is updated.
        vault.hashicorp.com/agent-inject-secret-my-vault-secret: "secret/my-vault-secret" #the secret stored at secret/my-vault-secret in Vault should be injected
        vault.hashicorp.com/agent-inject-template-my-vault-secret: | #the template for the injected my-vault-secret, specifying the format in which the secret will be written.
          {{- with secret "secret/my-vault-secret" -}}
          username={{ .Data.data.username }}
          password={{ .Data.data.password }}
          {{- end }}
        vault.hashicorp.com/role: "vault-role" #the Vault role to be used for authentication
    spec:
      serviceAccountName: rest-api-spring-boot-k8s-service-account #the service account that has permissions to access Vault.
      containers:
        - name: rest-api-spring-boot-k8s
          image: docker.io/library/rest-api-spring-boot-k8s:1.0.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: env.namespace
              value: default
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: rest-api-spring-boot-k8s-configmap
                  key: dbHost
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: rest-api-spring-boot-k8s-configmap
                  key: dbName
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: rest-api-spring-boot-k8s-configmap
                  key: dbPort
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: rest-api-spring-boot-k8s-secret
                  key: dbUserName
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rest-api-spring-boot-k8s-secret
                  key: dbPassword
          volumeMounts:
            - name: application-secrets
              mountPath: "/etc/secret" #accessible via minikube kubectl -- exec -it rest-api-spring-boot-k8s-6ccc44b4c4-rfz9b -- ls /etc/secret
              readOnly: true
      volumes:
        - name: application-secrets
          secret:
            secretName: rest-api-spring-boot-k8s-secret